@page "/GenerateLabels"
@using System.Xml
@using System.Xml.Serialization

<PageTitle>GenerateLabels</PageTitle>

<h1>Generate Labels</h1>
<MudPopoverProvider/>

<MudGrid>
    <MudItem xs="6">
        <MudTextField @bind-Value="ClientNumber" Label="Client number" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
        <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    </MudItem>
    <MudItem xs="6">
        <MudSelect T="string" @bind-Value="_url" Label="Select enviroment">
            <MudSelectItem Value="@(Globals.WSDL_ADDRESS)">PROD</MudSelectItem>
            <MudSelectItem Value="@(Globals.WSDL_DEMO_ADDRESS)">DEMO</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="3">
        <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="GenerateLabel">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Generate Label</MudText>
            }
        </MudButton>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="12">
        @if (label is not null)
        {
            <MudCard style="height:750px">
                <MudCardContent>
                    <iframe width="100%" height="100%" src="data:application/pdf;base64,@label" frameborder="0"></iframe>
                </MudCardContent>
                <MudCardActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Download" Color="Color.Default" />
                </MudCardActions>
            </MudCard>
        }
        else
        {
            <MudCard>
                <MudCardContent>
                    <h3>Label</h3>
                </MudCardContent>
            </MudCard>
        }
    </MudItem>
</MudGrid>

@code {
    string _url = Globals.WSDL_DEMO_ADDRESS;
    GeneratePackagesNumbersV9 currentPackage;
    API_METHODS currentMethod;
    string _request = "";
    string _response = "";
    private bool _processing = false;

    private string ClientNumber;
    private string Password;

    private string label;

    protected override async Task OnInitializedAsync()
    {
        ClientNumber = Globals.LOGIN;
        Password = Globals.PASSWORD;
    }

    async Task GenerateLabel()
    {
        string waybill;
        _processing = true;
        //Create new package
        var newPackage = new GeneratePackagesNumbersV9();
        _response = await Request.CallSoapWebService(_url, newPackage);
        
        //Deserialize response and get the waybill
        Envelope result;
        var serializer = new XmlSerializer(typeof(Envelope));
        using (var reader = new StringReader(_response))
        {                
            result = (Envelope)serializer.Deserialize(reader);
            waybill = result.Body.GeneratePackagesNumbersV9Response.Return.Packages.Package.Parcels.Parcel.Waybill;
        }
        
        //Generate Label
        var newLabel = new GenerateSpedLabelsV4(waybill);
        _response = await Request.CallSoapWebService(_url, newLabel);
        
        //Deserialize the label from response
        using (var reader = new StringReader(_response))
        {                
            result = (Envelope)serializer.Deserialize(reader);
            label = result.Body.GenerateSpedLabelsV4Response.Return.DocumentData;
        }
        
        _processing = false;
    }
    
}
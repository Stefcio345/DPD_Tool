@page "/SoapAPI"
@using System.Xml.Linq
@using System.Xml.Serialization

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<MudGrid>
    <MudItem xs="6">
        <MudSelect T="API_METHODS" Value="_currentMethod" Label="Select method" ValueChanged="MethodSelected">
            @foreach (API_METHODS item in Enum.GetValues(typeof(API_METHODS)))
            {
                <MudSelectItem Value="@item">@item</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="6">
        <MudSelect T="string" @bind-Value="_url" Label="Select enviroment">
            <MudSelectItem Value="@(Globals.WSDL_ADDRESS)">PROD</MudSelectItem>
            <MudSelectItem Value="@(Globals.WSDL_DEMO_ADDRESS)">DEMO</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="6">
        <MudTextField T="string" Label="Request" Variant="Variant.Outlined" Value="_request" Lines="40" TextChanged="RequestChanged"/>
    </MudItem>
    <MudItem xs="6">
        <MudTextField T="string" Label="Response" Variant="Variant.Outlined" Value="_response" Lines="40" TextChanged="ResponseChanged"/>
    </MudItem>
    <MudItem xs="3">
        <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="SendRequest">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Send</MudText>
            }
        </MudButton>
    </MudItem>
    <MudItem xs="3">
        <MudItem xs="3">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Prettify">Prettify</MudButton>
        </MudItem>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter] public Profile CurrentProfile { get; set; }
    string _url = Globals.WSDL_DEMO_ADDRESS;
    API_METHODS _currentMethod;
    string _request = "";
    string _response = "";
    private bool _processing = false;

    protected override async Task OnInitializedAsync()
    {
        //Serializacja
        UpdateRequest();
    }

    async Task SendRequest()
    {
        _processing = true;
        _response = XMLDocument.Prettify(await Request.SendSoapRequest(_url, _request));
        _processing = false;
        StateHasChanged();
    }
    
    async Task Prettify()
    {
        _request = XMLDocument.Prettify(_request);
        _response = XMLDocument.Prettify(_response);
        StateHasChanged();
    }
    
    //TODO Dodanie linku trackingowego dla paczki
    //TODO Check boxy będą się wyłączać jeżeli usługi nie będą pasować
    //Optional można ukryć wywołanie
    
    private void MethodSelected(API_METHODS obj)
    {
        _currentMethod = obj;
        UpdateRequest();
        _response = "";
        StateHasChanged();
    }

    private void RequestChanged(string obj)
    {
        _request = XMLDocument.Prettify(obj);
        StateHasChanged();
    }

    private void ResponseChanged(string obj)
    {
        _response = XMLDocument.Prettify(obj);
        StateHasChanged();
    }

    private void UpdateRequest()
    {
        switch (_currentMethod)
        {
            case API_METHODS.GeneratePackagesNumbers:
                var packagesNumbersV9 = new GeneratePackagesNumbersV9();
                packagesNumbersV9.UpdateAuthData(CurrentProfile);
                _request = packagesNumbersV9.CreateSoapEnvelope();
                break;
            case API_METHODS.GenerateSpedLabels:
                var spedLabelsV4 = new GenerateSpedLabelsV4();
                spedLabelsV4.UpdateAuthData(CurrentProfile);
                _request = spedLabelsV4.CreateSoapEnvelope();
                break;
            default:
                _request = "Method currently not implemented";
                break;
        }
    }

}
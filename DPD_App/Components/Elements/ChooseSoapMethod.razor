@using MouseEvent = MudBlazor.MouseEvent

<!-- Method choose -->
<MudButtonGroup DropShadow="true" Color="Color.Primary" Size="Size.Large" Variant="Variant.Filled" OverrideStyles="false">
    <MudMenu @ref="DPDServicesMenu" ActivationEvent="@(Hover ? MouseEvent.MouseOver : MouseEvent.LeftClick)" DropShadow="true" Label="DPD Services" Variant="Variant.Filled" Color="@GetButtonColor(API_SYSTEM.DPD_SERVICES)" Size="Size.Large" TransformOrigin="@TransformOrigin" AnchorOrigin="@AnchorOrigin">
        @foreach (var method in SoapApiMethods.Methods.Where(m => m.System == API_SYSTEM.DPD_SERVICES))
        {
            <MethodButtonAdvanced Data="Data" Parent="Parent" Method="@method" ParentMenu="DPDServicesMenu"/>
        }
    </MudMenu>
    <MudMenu @ref="InfoServicesMenu" ActivationEvent="@(Hover ? MouseEvent.MouseOver : MouseEvent.LeftClick)" DropShadow="true" Label="Info Services" Variant="Variant.Filled" Color="@GetButtonColor(API_SYSTEM.INFO_SERVICES)" Size="Size.Large" TransformOrigin="@TransformOrigin" AnchorOrigin="@AnchorOrigin" Disabled="@(Data.WsdlAddress?.Name == "DEMO")">
        @foreach (var method in SoapApiMethods.Methods.Where(m => m.System == API_SYSTEM.INFO_SERVICES))
        {
            <MethodButtonAdvanced Data="Data" Parent="Parent" Method="@method" ParentMenu="InfoServicesMenu"/>
        }
    </MudMenu>
    <MudMenu @ref="APPServicesMenu" ActivationEvent="@(Hover ? MouseEvent.MouseOver : MouseEvent.LeftClick)" DropShadow="true" Label="APP Services" Variant="Variant.Filled" Color="@GetButtonColor(API_SYSTEM.APP_SERVICES)" Size="Size.Large" TransformOrigin="@TransformOrigin" AnchorOrigin="@AnchorOrigin">
        @foreach (var method in SoapApiMethods.Methods.Where(m => m.System == API_SYSTEM.APP_SERVICES))
        {
            <MethodButtonAdvanced Data="Data" Parent="Parent" Method="@method" ParentMenu="APPServicesMenu"/>
        }
    </MudMenu>
</MudButtonGroup>

@code
{
    [Parameter] public SoapData Data { get; set; }
    [Parameter] public SoapInterface Parent { get; set; }
    [Parameter] public bool Hover { get; set; } = false;
    [Parameter] public Origin AnchorOrigin { get; set; } = Origin.BottomLeft;
    [Parameter] public Origin TransformOrigin { get; set; } = Origin.TopLeft;

    MudMenu DPDServicesMenu;
    MudMenu InfoServicesMenu;
    MudMenu APPServicesMenu;
    private MudMenu Test;

    private Color GetButtonColor(API_SYSTEM currentSystem)
    {
        return currentSystem == Data.CurrentMethod.System ? Color.Primary : Color.Default;
    }
    
}
